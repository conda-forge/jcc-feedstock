Index: jcc3/python.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jcc3/python.py	(revision 1857054)
+++ jcc3/python.py	(date 1555188625950)
@@ -732,9 +732,29 @@
         sequenceLenName, sequenceLenSig = sequence[0].split(':')
         sequenceGetName, sequenceGetSig = sequence[1].split(':')
 
+    def compare_types(mytype):
+        class K:
+            def __init__(self, obj, *args):
+                self.obj = obj
+            def __lt__(self, other):
+                # Calculate a multi variable isAssignable
+                result = False
+                self_p = self.obj.getParameterTypes()
+                other_p = other.obj.getParameterTypes()
+
+                if self_p:
+                    result = True
+                    for item_self, item_other in zip(self_p, other_p):
+                        is_ass = item_self.isAssignableFrom(item_other)
+                        result = result and is_ass
+
+                return not result
+
+        return K(mytype)
+
     for name, methods in allMethods:
         args, x, cardinality = methodargs(methods, superMethods)
-        methods.sort(key=lambda x: len(x.getParameterTypes()))
+        methods.sort(key=lambda x: (len(x.getParameterTypes()), compare_types(x) )) # Sort on both parameter length and order in class tree
         method = methods[0]
         modifiers = method.getModifiers()
         if name == 'iterator' and iteratorMethod is None:
