Index: jcc3/sources/functions.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jcc3/sources/functions.cpp	(revision 1868562)
+++ jcc3/sources/functions.cpp	(revision 1868563)
@@ -1740,8 +1740,8 @@
 
         if (module_name != NULL)
         {
-            PyObject_SetAttrString(
-                (PyObject *) *type, "__module__", module_name);
+            PyObject_SetAttrString((PyObject *) *type, "__module__",
+                                   module_name);
             Py_DECREF(module_name);
         }
     }
Index: jcc3/sources/JArray.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jcc3/sources/JArray.cpp	(revision 1868562)
+++ jcc3/sources/JArray.cpp	(revision 1868563)
@@ -612,9 +612,19 @@
 
             type_object = (PyTypeObject *) PyType_FromSpec(&spec);
 
-            if (type_object != NULL)
+            if (type_object != NULL) {
                 PyModule_AddObject(module, name, (PyObject *) type_object);
 
+                PyObject *module_name = PyModule_GetNameObject(module);
+
+                if (module_name != NULL)
+                {
+                    PyObject_SetAttrString((PyObject *) type_object,
+                                           "__module__", module_name);
+                    Py_DECREF(module_name);
+                }
+            }
+
             _t_iterator<U>::JArrayIterator = type_object;
         }
     };
@@ -685,6 +695,15 @@
                                  make_descriptor(wrapfn_<T>));
 
             PyModule_AddObject(module, name, (PyObject *) type_object);
+
+            PyObject *module_name = PyModule_GetNameObject(module);
+
+            if (module_name != NULL)
+            {
+                PyObject_SetAttrString((PyObject *) type_object,
+                                       "__module__", module_name);
+                Py_DECREF(module_name);
+            }
         }
 
         U::format = PyUnicode_FromFormat("JArray<%s>%%s", type_name);
